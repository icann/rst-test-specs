---
RST-Test-Plan-Schema-Version: 1.3
Version: 3.0
Last-Updated: 2023-10-02

Preamble: |
  The Test System consists of several *test plans*, each of which addresses a
  particular scenario. The test plans follow a standard structure and
  methodology derived from ISO/IEC 29119 *(formerly IEEE 829-2008)*.

  Each *test plan* includes one or more *test suites*, which in turn include
  one or more *test cases*. For a test to succeed, every test case has to pass.

  This file describes each test plan, suite and case in the RST system.

  ### 2.1. Key acronyms and terms

  RST
  : Registry System Testing. This system.

  PDT
  : Pre-Delegation Test. A test carried out prior to the delegation of a new TLD
  into the DNS root zone.

  RSP
  : Registry Service Provider. A specialist provider of critical registry
  services.

  DNS
  : Domain Name System. The internet's system of globally unique identifiers.

  TLD
  : Top-level domain. The highest level of the DNS namespace hierarchy.

  gTLD
  : generic top-level domain.

  DNSSEC
  : DNS Security Extensions.

  EPP
  : Extensible Provisioning Protocol. The protocol used by registrars to create
  and manage domain name registrations in an SRS.

  SRS
  : Shared Registry System. A TLD registry in which registrations are managed
  by one or more registrars, using EPP.

  RDDS
  : Registration Data Directory Services. A service to provide access to
  data about domain registrations to third parties.

  RDAP
  : Registration Data Access Protocol. The protocol used to deliver the RDDS.

  RDE
  : Registry Data Escrow. A system whereby the registration data stored in a
  Shared Registry System is backed up to a trusted third party.

  IDN
  : Internationalized Domain Name. A domain name that contains characters not in
  the ASCII character set.

  LGR
  : Label Generation Ruleset. The rules by which IDN domain names are validated.

  RO
  : Registry Operator. The entity which ICANN has granted the right to operate a
  gTLD.

  RA
  : Registry Agreement. The contract between a Registry Operator and ICANN.

  KSK
  : Key Signing Key. A cryptographic key which acts as the Secure Entry Point
  for a DNS zone, and which signs a DNS zone's ZSKs. A digest of this key is
  published in the parent zone (ie. the root zone for a TLD).

  ZSK
  : Zone Signing Key. A cryptographic key which signs a DNS zone's resource
  records.

Contact:
  Name: GDS Technical Services
  Organization: Internet Corporation for Assigned Names and Numbers (ICANN)
  Email: rst@icann.org

Test-Plans:
  StandardPreDelegationTest:
    Order: 1
    Name: Standard Pre-Delegation Test Plan
    Description: |
      The purpose of the Pre-Delegation Test is to verify that the applicant has
      met its commitment to establish registry operations in accordance with the
      technical and operational criteria described in the gTLD Applicant
      Guidebook (AGB). Each applicant will be required to complete PDT as a
      prerequisite to delegation into the root zone.

      The Pre-Delegation Test covers all critical registry services and IDNs,
      and therefore uses all test suites.
    Test-Suites:
      - StandardDNS
      - StandardDNSSEC
      - StandardEPP
      - StandardRDDS
      - StandardIDN
      - StandardRDE

  StandardRSPChangeTest:
    Order: 2
    Name: Standard RSP Change Test Plan
    Description: |
      A Registry Operator may apply to ICANN to change a Material Subcontracting
      Arrangement (MSA) and appoint a new Registry Services Provider. Before
      this change can be approved, the new RSP must complete Registry System
      Testing to ensure their systems comply with the technical and operational
      requirements of the Registry Agreement.

      The RSP Change Test covers all critical registry services and IDNs, and
      therefore uses all test suites.
    Test-Suites:
      - StandardDNS
      - StandardDNSSEC
      - StandardEPP
      - StandardIDN
      - StandardRDDS
      - StandardRDE

  DNSRSPChangeTest:
    Order: 3
    Name: DNS RSP Change Test Plan
    Description: |
      A Registry Operator may apply to ICANN to change a Material Subcontracting
      Arrangement (MSA) and appoint a new provider of authoritative DNS services
      instead of or in addition to any existing provider(s).

      Before this change can be approved, the new DNS provider must complete
      testing to ensure their systems comply with the technical and operational
      requirements of the Registry Agreement.

      The DNS RSP Change Test uses the DNS test suite only.
    Test-Suites:
      - StandardDNS
      - StandardDNSSEC

  IDNTest:
    Order: 4
    Name: IDN Test Plan
    Description: |
      A Registry Operator may apply to ICANN to amend its Registry Agreement
      to offer new scripts and/or languages for Internationalized Domain Names.

      The purpose of an IDN RST test is to verify that the Registry Operator’s
      registry system handles IDN registrations in accordance with the
      submitted policy statements and IDN tables.

      The IDN Test uses the IDN test suite only.
    Test-Suites:
      - StandardIDN

  SRSGatewayTest:
    Order: 5
    Name: SRS Gateway Test Plan
    Description: |
      An SRS Gateway service is a Shared Registry System implementation that
      acts as a proxy between a subset of Registrars and the Registry. It uses
      a local cache to speed up EPP query commands, but forwards all EPP
      transform commands to the TLD Registry System. TLD registries need to
      deploy a proxy setup in order to operate in certain markets worldwide.

      The purpose of an SRS Gateway Test is to verify that the Registry
      Operator’s proxy setup operates in accordance with the technical and
      operational criteria for EPP systems described in the gTLD Applicant
      Guidebook (AGB). Furthermore, it must keep its own database synchronized
      with that of the TLD registry.

      The SRS Gateway Test Change Test uses the RDDS and EPP test suites.
    Test-Suites:
      - StandardSRSGateway

  StandardRSPEvaluationTest:
    Order: 6
    Name: Standard RSP Evaluation Test
    Description: |
      For the Next Round of gTLD applications, Registry Service Providers can
      apply to be pre-evaluated before submission of applications.

      A "Standard" RSP is one which provides all of the critical registry
      services.

      As a result, this test plan is designed to cover all aspects of RSP
      operations, and is substantially similar to the Standard Pre-Delegation
      Test and Standard RSP Change Test.
    Test-Suites:
      - StandardDNS
      - StandardDNSSEC
      - StandardEPP
      - StandardIDN
      - StandardRDDS
      - StandardRDE

  DNSRSPEvaluationTest:
    Order: 7
    Name: DNS RSP Evaluation Test
    Description: |
      DNS RSPs provide primary or secondary authoritative DNS services.
      Therefore, this test plan only covers the DNS area.

      RSPs wishing to offer DNSSEC services in addition to authoritative DNS
      will also be evaluated using the DNSSEC RSP Evaluation Test below.
    Test-Suites:
      - StandardDNS

  DNSSECRSPEvaluationTest:
    Order: 8
    Name: DNSSEC RSP Evaluation Test
    Description: |
      DNSSEC RSPs provide signing of TLD zone files as a service. They do not
      provide primary or secondary authoritative DNS services.

      RSPs wishing to offer DNSSEC services in addition to authoritative DNS
      will also be evaluated using the DNSSEC RSP Evaluation Test below.
    Test-Suites:
      - StandardDNSSEC
      - dnssecKeyRollovers

Test-Suites:
  StandardDNS:
    Order: 1
    Name: Standard DNS Test
    Description: |
      The DNS test suite validates the authoritative DNS services for the TLD
      or RSP.

      The DNS test suite is taken from the test plans that are part of the
      [Zonemaster software](https://github.com/zonemaster) (`Zonemaster::Engine`
      version v4.7.3). Test case IDs from this document can be mapped to the
      Zonemaster test IDs by removing the `dns-` prefix.

      Since Zonemaster is designed to perform testing of domain names anywhere
      in the DNS hierarchy, not all Zonemaster tests are applicable for TLDs and
      may not be listed in the test suites in this document.
    Test-Cases: ^dns-

  StandardDNSSEC:
    Order: 2
    Name: Standard DNSSEC Test
    Description: |
      The DNSSEC test suite validates the DNSSEC signing service for the TLD or
      RSP.

      The DNSSEC test suite is taken from the test plans that are part of the
      [Zonemaster software](https://github.com/zonemaster) (`Zonemaster::Engine`
      version v4.7.3). Test case IDs from this document can be mapped to the
      Zonemaster test IDs by removing the `dnssec-` prefix.

      Since Zonemaster is designed to perform testing of domain names anywhere
      in the DNS hierarchy, not all Zonemaster tests are applicable for TLDs and
      may not be listed in the test suites in this document.
    Test-Cases: ^dnssec-

  StandardRDDS:
    Order: 3
    Name: Standard RDDS Test
    Description: |
      The DNSSEC test suite validates the RDDS service(s) of the TLD or RSP.

      The RDAP test suite is derived from the test specification of the [RDAP
      Conformance Tool](https://github.com/icann/rdap-conformance-tool/blob/master/doc/RDAPConformanceToolSpecifications.pdf).
      As with the DNS and DNSSEC tests, the test IDs can be mapped to the test
      IDs in this document by removing the `rdap-` prefix.
    Test-Cases: ^rdap-

  StandardEPP:
    Order: 4
    Name: Standard EPP Test
    Description: |
      The EPP test suite validates the EPP service of the TLD or RSP.
    Test-Cases: ^epp-

  StandardRDE:
    Order: 5
    Name: Standard RDE Test
    Description: |
      The RDE test suite validates Registry Data Escrow deposits generated for
      the TLD or RSP.
    Test-Cases: ^rde-

  StandardIDN:
    Order: 6
    Name: Standard IDN Test
    Description: |
      The RDE test suite validates the IDN table(s) for a TLD or RSP.
    Test-Cases: ^idn-

  StandardSRSGateway:
    Order: 7
    Name: Standard SRS Gateway Test
    Description: |
      The SRS Gateway test suite validates the conformance of the Gateway
      registry infrastructure of a TLD or RSP, and the synchronisation between
      primary and gateway systems.
    Test-Cases: ^srsgw-

  dnssecKeyRollovers:
    Order: 8
    Name: DNS RSP DNSSEC Key Rollover Test
    Test-Cases:
      - dnssecRSP-ZSKRollover01
      - dnssecRSP-KSKRollover01

Test-Cases:
  dns-address01:
    Summary: Verify that IPv4 addresse are not in private networks
  dns-address02:
    Summary: Verify reverse DNS entries exist for nameserver IP addresses
  dns-address03:
    Summary: Verify that reverse DNS entries match nameserver names
  dns-connectivity01:
    Summary: Verify nameserver UDP port 53 reachability
  dns-connectivity02:
    Summary: Verify nameserver TCP port 53 reachability
  dns-connectivity03:
    Summary: Verify that all nameservers do not belong to the same AS
  dns-connectivity04:
    Summary: Verify that name servers are not announced in the same IP prefix
  dns-consistency01:
    Summary: Query all nameservers for SOA, and verify that they all have the same SOA serial number
  dns-consistency02:
    Summary: Query all nameservers for SOA, and verify that they all have the same SOA rname
  dns-consistency03:
    Summary: Query all nameservers for SOA, and verify that they all have the same time parameters (REFRESH/RETRY/EXPIRE/MINIMUM)
  dns-consistency04:
    Summary: Query all nameservers for the NS set, and verify that they have all the same content
  dns-consistency05:
    Summary: Verify that the glue records are consistent with authoritative data
  dns-consistency06:
    Summary: Query all nameservers for SOA, and verify that they all have the same SOA mname
  dns-delegation01:
    Summary: Verify that there are more than two nameservers
  dns-delegation02:
    Summary: Verify that name servers have distinct IP addresses
  dns-delegation03:
    Summary: Verify that there is no truncation on referrals
  dns-delegation04:
    Summary: Verify that nameservers are authoritative
  dns-delegation05:
    Summary: Verify that NS RRs do not point to CNAMEs
  dns-delegation06:
    Summary: Verify existence of SOA
  dns-nameserver01:
    Summary: Verify that nameserver does not provide recursive service
  dns-nameserver02:
    Summary: Verify EDNS0 support
  dns-nameserver04:
    Summary: Verify that replies from nameserver comes from the expected IP address
  dns-nameserver05:
    Summary: Verify behaviour against AAAA queries
  dns-nameserver06:
    Summary: Verify that each nameserver can be resolved to an IP address
  dns-nameserver07:
    Summary: Check whether authoritative name servers return an upward referral
  dns-nameserver08:
    Summary: Check whether authoritative name servers responses match the case of every letter in QNAME
  dns-nameserver09:
    Summary: Check whether authoritative name servers return same results for equivalent names with different cases in the request
  dns-nameserver10:
    Summary: Check whether authoritative name servers respond correctly to queries with undefined EDNS version
  dns-nameserver11:
    Summary: Check whether authoritative name servers responses doe not include unknown EDNS OPTION-CODE used in query
  dns-nameserver12:
    Summary: Check whether authoritative name servers responses has "Z" bits cleared even if they are set in the query
  dns-nameserver13:
    Summary: Verify that if the response to a query with an OPT record is truncated, then the response will contain an OPT record
  dns-syntax05:
    Summary: Verify that a SOA rname (Zonemaster::Engine::DNSName) given has a conform usage of at sign (@)
  dns-syntax06:
    Summary: Verify that a SOA rname (Zonemaster::Engine::DNSName) given is RFC822 compliant
  dns-syntax07:
    Summary: Verify that SOA mname of zone given conforms to syntax rules
  dns-zone01:
    Summary: Check that master nameserver in SOA is fully qualified
  dns-zone02:
    Summary: Verify SOA 'refresh' minimum value
  dns-zone03:
    Summary: Verify SOA 'retry' value is lower than SOA 'refresh' value
  dns-zone04:
    Summary: Verify SOA 'retry' minimum value
  dns-zone05:
    Summary: Verify SOA 'expire' minimum value
  dns-zone06:
    Summary: Verify SOA 'minimum' (default TTL) value
  dns-zone07:
    Summary: Verify that SOA master is not an alias (CNAME)
  dns-zone10:
    Summary: Verify that the zone of the domain to be tested return exactly one SOA record

  dnssec-01:
    Summary: Verifies that all DS records have digest types registered with IANA
  dnssec-02:
    Summary: Verifies that all DS records have a matching DNSKEY
  dnssec-03:
    Summary: Check iteration counts for NSEC3
  dnssec-04:
    Summary: Checks the durations of the signatures for the DNSKEY and SOA RRsets
  dnssec-05:
    Summary: Check DNSKEY algorithms
  dnssec-06:
    Summary: Check for DNSSEC extra processing at child nameservers
#  dnssec-07:
#    Summary: Check that both DS and DNSKEY are present
  dnssec-08:
    Summary: Check that the DNSKEY RRset is signed
  dnssec-09:
    Summary: Check that the SOA RRset is signed
  dnssec-10:
    Summary: Check for the presence of either NSEC or NSEC3, with proper coverage and signatures
#  dnssec-11:
#    Summary: Check that the delegation step from parent is properly signed
  dnssec-13:
    Summary: Check that all DNSKEY algorithms are used to sign the zone
  dnssec-14:
    Summary: Check for valid RSA DNSKEY key size
  dnssec-15:
    Summary: Check existence of CDS and CDNSKEY
  dnssec-16:
    Summary: Validate CDS
  dnssec-17:
    Summary: Validate CDNSKEY
#  dnssec-18:
#    Summary: Validate trust from DS to CDS and CDNSKEY

  rdap-ipv4Validation:
    Summary: IPv4 address validation
  rdap-ipv6Validation:
    Summary: IPv6 address validation
  rdap-domainNameValidation:
    Summary: Domain Name validation
  rdap-webUriValidation:
    Summary: Web URI validation
  rdap-domainCaseFoldingValidation:
    Summary: Domain label case folding validation
  rdap-stdRdapConformanceValidation:
    Summary: RDAP Conformance validation
  rdap-stdRdapLinksValidation:
    Summary: Links validation
  rdap-stdRdapNoticesRemarksValidation:
    Summary: Notices and Remarks Validation
  rdap-stdRdapLanguageIdentifierValidation:
    Summary: Language Identifier Validation
  rdap-stdRdapEventsValidation:
    Summary: Events Validation
  rdap-stdRdapStatusValidation:
    Summary: Status validation
  rdap-stdRdapPort43WhoisServerValidation:
    Summary: Port 43 WHOIS Server
  rdap-stdRdapPublicIdsValidation:
    Summary: Public IDs validation
  rdap-stdRdapAsEventActorValidation:
    Summary: asEventActor Validation
  rdap-stdRdapIpAddressesValidation:
    Summary: IP Addresses Validation
  rdap-stdRdapVariantsValidation:
    Summary: Variants validation
  rdap-stdRdapUnicodeNameValidation:
    Summary: Unicode name
  rdap-stdRdapLdhNameValidation:
    Summary: LDH name
  rdap-stdRdapRolesValidation:
    Summary: Roles validation
  rdap-stdRdapEntitiesValidation:
    Summary: Entities validation
  rdap-stdRdapSecureDnsValidation:
    Summary: Secure DNS validation
  rdap-stdRdapErrorResponseBodyValidation:
    Summary: Error Response Body
  rdap-stdRdapDomainLookupValidation:
    Summary: Domain Lookup Validation
  rdap-stdRdapEntityLookupValidation:
    Summary: Entity lookup validation
  rdap-stdRdapNameserverLookupValidation:
    Summary: Nameserver lookup validation
  rdap-stdRdapHelpValidation:
    Summary: Help validation
  rdap-stdRdapNameserversSearchValidation:
    Summary: Nameservers search validation
  rdap-tigSection_1_2_Validation:
    Summary: use of HTTPS
  rdap-tigSection_1_3_Validation:
    Summary: use of obsolete SSL/TLS versions
  rdap-tigSection_1_6_Validation:
    Summary: support for HEAD
  rdap-tigSection_1_8_Validation:
    Summary: IPv4/IPv6 resolvability
  rdap-tigSection_1_13_Validation:
    Summary: Access-Control-Allow-Origin header
  rdap-tigSection_1_14_Validation:
    Summary: presence of "icann_rdap_technical_implementation_guide_0" in "rdapConformance"
  rdap-tigSection_3_3_and_3_4_Validation:
    Summary: presence of link object(s) in notice(s)
  rdap-tigSection_4_1_Validation:
    Summary: structured addresses in entity jCards
  rdap-tigSection_7_1_and_7_2_Validation:
    Summary: voice/fax type for tel nodes in entity jCards
  rdap-tigSection_1_11_1_Validation:
    Summary: bootstrap registration
  rdap-tigSection_3_2_Validation:
    Summary: rel="related" link in topmost object
  rdap-tigSection_6_1_Validation:
    Summary: publicIds property of registrar entity
  rdap-rdapResponseProfile_1_2_2_Validation:
    Summary: no JavaScript
  rdap-rdapResponseProfile_1_3_Validation:
    Summary: presence of "icann_rdap_response_profile_0" in "rdapConformance"
  rdap-rdapResponseProfile_1_4_Validation:
    Summary: empty country name parameter of entity jCards
  rdap-rdapResponseProfile_2_3_1_3_and_2_7_6_and_3_3_and_4_4_Validation:
    Summary: presence of "last update of RDAP database" event
  rdap-rdapResponseProfile_2_1_Validation:
    Summary: presence of ldhName/unicodeName property for A-label/U-label domain lookup responses, respectively
  rdap-rdapResponseProfile_2_2_Validation:
    Summary: format of handle property
  rdap-rdapResponseProfile_2_3_1_1_Validation:
    Summary: presence of "registration" event
  rdap-rdapResponseProfile_2_3_1_2_Validation:
    Summary: presence of "expiration" event
  rdap-rdapResponseProfile_notices_included_Validation:
    Summary: presence of "notices" property
  rdap-rdapResponseProfile_2_6_3_Validation:
    Summary: presence of "Status Codes" notice
  rdap-rdapResponseProfile_2_11_Validation:
    Summary: presence of "RDDS Inaccuracy Complaint Form" notice
  rdap-rdapResponseProfile_2_10_Validation:
    Summary: presence of secureDNS property
  rdap-rdapResponseProfile_rfc5731_Validation:
    Summary: domain status code validation
  rdap-rdapResponseProfile_rfc3915_Validation:
    Summary: RGP status code validation
  rdap-rdapResponseProfile_2_6_1_Validation:
    Summary: at least one status code
  rdap-rdapResponseProfile_2_9_1_and_2_9_2_Validation:
    Summary: presence and validity of ldhName, handle, status properties in domain nameservers
  rdap-rdapResponseProfile_2_4_1_Validation:
    Summary: presence and validity of the registrar entity
  rdap-rdapResponseProfile_2_4_2_and_2_4_3_Validation:
    Summary: validation of the publicIds and handle properties of the registrar entity
  rdap-rdapResponseProfile_2_4_5_Validation:
    Summary: abuse role for the registrar entity
  rdap-rdapResponseProfile_4_1_Validation:
    Summary: presence of ldhName/unicodeName property for A-label/U-label nameserver lookup responses, respectively
  rdap-rdapResponseProfile_4_3_Validation:
    Summary: presence and validity of the registrar entity
  rdap-nameserver_status:
    Summary: validation of nameserver status codes
  rdap-rdapResponseProfile_2_7_5_3_Validation:
    Summary: proper redaction of domain entities
  rdap-rdaptigSection_1_1_3_redactionExtension:
    Summary: use of Redacted Fields extension, validation of redacted paths
  rdap-rdaptigSection_3_3_3_termsOfService:
    Summary: presence of terms-of-service link
  rdap-rdapResponseProfile_1_6_contactReprestentation:
    Summary: validate use of jCard and presence of alternative format(s)
  rdap-rdapResponseProfile_2_4_6_registrarAboutLink:
    Summary: presence of "about" link in registrar entity

  rde-01:
    Summary: validate filename format
    Description: |
      the deposit filename must conform to the format specified in the RA.
    Input-Parameters:
      - rde.deposit
  rde-02:
    Summary: validate signature(s)
    Description: |
      the signature must be valid for the deposit file and the RSP's key.
    Input-Parameters:
      - rde.deposit
      - rde.signature
  rde-03:
    Summary: decrypt deposit file(s)
    Description: |
      it must be possible to decrypt the deposit file using the RST key.
    Input-Parameters:
      - rde.deposit
  rde-04:
    Summary: validate XML/CSV
    Description: |
      * XML deposit files must be well-formed and validate against the XML
        schema.
      * CSV files must conform to RFC 4180.
    Input-Parameters:
      - rde.deposit
  rde-04:
    Summary: validate object types
    Description: |
      the header object must reference the correct object XML namespace URIs.
    Input-Parameters:
      - rde.deposit
      - general.registryType
      - epp.objectURIs
  rde-06:
    Summary: validate object counts
    Description: |
      the number of each type of object must match the number of objects
      actually present in the deposit file.
    Input-Parameters:
      - rde.deposit
  rde-07:
    Summary: validate domain objects
    Description: |
      domain objects (whether CSV or XML) must have the required object 
      properties, and the values of those object properties must be well-formed.

      Contact and/or host objects which are referenced in domain objects must be
      present in the deposit.
    Input-Parameters:
      - rde.deposit
      - general.registryType
  rde-08:
    Summary: validate host objects (if applicable)
    Description: |
      host objects (whether CSV or XML) must have the required object 
      properties, and the values of those object properties must be well-formed.
    Input-Parameters:
      - rde.deposit
      - epp.hostModel
  rde-09:
    Summary: validate contact objects (if applicable)
    Description: |
      contact objects (whether CSV or XML) must have the required object 
      properties, and the values of those object properties must be well-formed.
    Input-Parameters:
      - rde.deposit
      - general.registryType
  rde-10:
    Summary: validate registrar objects
    Description: |
      registrar objects (whether CSV or XML) must have the required object 
      properties, and the values of those object properties must be well-formed.
    Input-Parameters:
      - rde.deposit
  rde-11:
    Summary: validate IDN table objects
    Description: |
      IDN table objects (whether CSV or XML) must have the required object 
      properties, and the values of those object properties must be well-formed.

      All IDN table objects present in the deposit must correspond to IDN tables
      approved for the TLD, and all approved tables must have a corresponding
      object in the deposit.
    Input-Parameters:
      - rde.deposit
      - idn.tableIDs
  rde-12:
    Summary: validate NNDN objects
    Description: |
      NNDN table objects (whether CSV or XML) must have the required object 
      properties, and the values of those object properties must be well-formed.

      The aName property of NNDN objects must not match the name property of a
      domain object.
    Input-Parameters:
      - rde.deposit
  rde-13:
    Summary: validate EPP parameters object
    Description: |
      The EPP Parameters object must match the `<greeting>` element returned by
      the EPP server.
    Input-Parameters:
      - epp.objectURIs
      - epp.extensionURIs
      - epp.hostModel
      - general.registryType
  rde-14:
    Summary: validate policy object
    Description: |
      The object policies included in the `<rdePolicy:policy>` object must
      conform to the Registration Data Policy and the applicable data model.
    Input-Parameters:
      - general.registryType

  epp-01:
    Summary: EPP server must have at least one A record
    Input-Parameters:
      - epp.hostname
  epp-02:
    Summary: EPP server must have at least one AAAA record
    Input-Parameters:
      - epp.hostname
  epp-03:
    Summary: All IP addresses must accept TCP connections on port 700
    Dependencies:
      - epp-01
      - epp-02
  epp-04:
    Summary: All service ports support TLSv1.2 or higher
    Dependencies:
      - epp-03
  epp-05:
    Summary: All service ports must not support TLSv1.1 or earlier
    Dependencies:
      - epp-03
  epp-06:
    Summary: All service ports must offer a valid certificate issued by a trusted CA
    Dependencies:
      - epp-03
  epp-07:
    Summary: TLS certificate must be valid
    Dependencies:
      - epp-03
  epp-08:
    Summary: TLS certificate must be valid for the server name
    Dependencies:
      - epp-03
  epp-09:
    Summary: All service ports must send a <greeting> frame after successful connection
    Input-Parameters:
      - epp.hostname
      - epp.port
      - epp.objectURIs
      - epp.extensionURIs
      - epp.hostModel
      - general.registryType
  epp-10:
    Summary: All server responses must validate against the XML schema
  epp-11:
    Summary: <svID> element in the <greeting> must be valid
  epp-12:
    Summary: <svDate> element in the <greeting> must be valid
  epp-13:
    Summary: <version> element in the <greeting> must be valid
  epp-14:
    Summary: <lang> element(s) in the <greeting> must be valid
  epp-15:
    Summary: <objURI> element(s) in the <greeting> must be valid for the registry type
  epp-16:
    Summary: <extURI> element(s) in the <greeting> must be valid
  epp-17:
    Summary: <login> command must return a successful response
  epp-18:
    Summary: <hello> command must return a <greeting>
  epp-19:
    Summary: domain <check> command test
  epp-20:
    Summary: domain sunrise <check> command test
  epp-21:
    Summary: domain trademark claims <check> command test
  epp-22:
    Summary: host <check> command test
  epp-23:
    Summary: contact <check> command test (if applicable for the registry type)
  epp-24:
    Summary: contact <create> command test (if applicable for the registry type)
  epp-25:
    Summary: contact <info> command test (if applicable for the registry type)
  epp-26:
    Summary: contact <update> command test (if applicable for the registry type)
  epp-27:
    Summary: contact <delete> command test (if applicable for the registry type)
  epp-28:
    Summary: host <create> command test
  epp-29:
    Summary: host <info> command test
  epp-30:
    Summary: host <update> command test
  epp-31:
    Summary: host <delete> command test
  epp-32:
    Summary: domain <create> command test
  epp-33:
    Summary: domain/launch application sunrise <create> command test
  epp-34:
    Summary: domain trademark claims <create> command test
  epp-35:
    Summary: domain <info> command test
  epp-36:
    Summary: launch application sunrise <info> command test (if applicable)
  epp-37:
    Summary: domain <update> command test
  epp-38:
    Summary: domain <renew> command test
  epp-39:
    Summary: domain <transfer> command test
  epp-40:
    Summary: domain <delete> command test
  epp-41:
    Summary: host rename test
  epp-42:
    Summary: domain restore test
  dnssecRSP-ZSKRollover01:
    Summary: test ZSK rollover
  dnssecRSP-KSKRollover01:
    Summary: test KSK rollover

Input-Parameters:
  epp.hostname:
    Description: the fully-qualified domain name of the EPP server.
    Type: string
    Example: epp.rsp.tech
  epp.port:
    Description: the TCP port of the EPP service.
    Type: integer
    Example: 700
  epp.clid:
    Description: the username used to log in to the EPP server.
    Type: string
    Example: clid-01
  epp.pwd:
    Description: the password used to log in to the EPP server.
    Type: string
    Example: foo2bar
  rde.deposit:
    Description: an RDE deposit file.
    Type: file
    Example: example_20231004_FULL_S1_R0.ryde
  rde.signature:
    Description: an RDE deposit signature.
    Type: file
    Example: example_20231004_FULL_S1_R0.sig
  general.registryType:
    Description: whether the registry is `thick` or `thin`.
    Type: string
    Example: thick
  idn.tableIDs:
    Description: the list of supported IDN tables.
    Type: array
    Example:
      - latn
      - arab
      - zh
      - fr_FR
  epp.hostModel:
    Description: |
      whether the EPP server supports host `objects` or host `attributes`.
    Type: string
    Example: objects
  epp.objectURIs:
    Description: the list of supported object namespace URIs.
    Type: array
    Example:
      - urn:ietf:params:xml:ns:domain-1.0
      - urn:ietf:params:xml:ns:host-1.0
  epp.extensionURIs:
    Description: the list of supported extension namespace URIs.
    Type: array
    Example:
      - urn:ietf:params:xml:ns:epp:loginSec-1.0
      - urn:ietf:params:xml:ns:epp:fee-1.0

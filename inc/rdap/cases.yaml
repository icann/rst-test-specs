rdap-01:
  Implemented: true
  Summary: Domain query test
  Maturity: BETA
  Description: |
    This test validates the server's response to a domain name query.

    The client will send domain query requests for each domain name in the
    `rdap.testDomains` input parameter and validate the responses for
    conformance with the gTLD RDAP Profile.

    If the value of the `general.registryDataModel` is `minimum`, then the
    response will be validated against the "thin" validation rules, whereas the
    "thick" rules will be used if the value of the parameter is `maximum`. If
    the value is `per-registrar`, then the response **MUST** correctly validate
    against one of the two rulesets.

    If any of the responses cannot be validated, then this test case will fail.
  Input-Parameters:
    - general.registryDataModel
  Errors:
    - RDAP_DOMAIN_RESPONSE_VALIDATION_FAILED

rdap-02:
  Implemented: true
  Summary: Nameserver query test
  Maturity: BETA
  Description:
    This test validates the server's response to a nameserver name query.

    If the value of the `epp.hostModel` input parameter is `attributes`, this
    test will be skipped.

    The client will send domain query requests for each nameserver in the
    `rdap.testNameservers` input parameter and validate the responses for
    conformance with the gTLD RDAP Profile.

    If any of the responses cannot be validated, then this test case will fail.
  Errors:
    - RDAP_NAMESERVER_RESPONSE_VALIDATION_FAILED

rdap-03:
  Implemented: true
  Summary: Registrar query test
  Maturity: BETA
  Description: |
    This test validates the server's response to an entity query for a
    registrar.

    The client will send domain query requests for each nameserver in the
    `rdap.testEntities` input parameter and validate the responses for
    conformance with the gTLD RDAP Profile.

    If any of the responses cannot be validated, then this test case will fail.
  Errors:
    - RDAP_ENTITY_RESPONSE_VALIDATION_FAILED

rdap-04:
  Implemented: true
  Summary: Help query test
  Maturity: BETA
  Description: |
    This test validates the server's response to a help query.

    If the value of the `epp.hostModel` input parameter is `attributes`, this
    test will be skipped.

    The client will send a help query to each base URL specified in the
    `rdap.baseURLs` input parameter, and validate the responses for
    conformance with the gTLD RDAP Profile.

    If any of the responses cannot be validated, then this test case will fail.
  Errors:
    - RDAP_HELP_RESPONSE_VALIDATION_FAILED

rdap-05:
  Implemented: true
  Summary: Domain HEAD test
  Maturity: BETA
  Description: |
    This test validates that the server supports `HEAD` requests for domain
    names.

    The client will issue a `HEAD` request for each domain name in the
    `rdap.testDomains` input parameter and confirm that the server sends a
    response with (a) a status code of `200`, (b) a valid
    `access-control-allow-origin` header field, and (c) an empty body.
  Errors:
    - RDAP_DOMAIN_HEAD_FAILED

rdap-06:
  Implemented: true
  Summary: Nameserver HEAD test
  Maturity: BETA
  Description: |
    This test validates that the server supports `HEAD` requests for
    nameservers.

    The client will issue a `HEAD` request for each domain name in the
    `rdap.testNameservers` input parameter and confirm that the server sends a
    response with (a) a status code of `200`, (b) a valid
    `access-control-allow-origin` header field, and (c) an empty body.
  Errors:
    - RDAP_NAMESERVER_HEAD_FAILED

rdap-07:
  Implemented: true
  Summary: Entity HEAD test
  Maturity: BETA
  Description: |
    This test validates that the server supports `HEAD` requests for entities.

    The client will issue a `HEAD` request for each domain name in the
    `rdap.testEntities` input parameter and confirm that the server sends a
    response with (a) a status code of `200`, (b) a valid
    `access-control-allow-origin` header field, and (c) an empty body.
  Errors:
    - RDAP_ENTITY_HEAD_FAILED

rdap-91:
  Implemented: true
  Summary: TLS version conformance check
  Maturity: GAMMA
  Description: |
    **NOTE: this test case is a placeholder for a test case that will eventually
    be added to the RDAP Conformance Tool.**

    This test case verifies that the RDAP server properly implements a secure
    TLS configuration.

    1. All service ports **MUST** support TLSv1.2 and optionally any subsequent
       protocol published by the IETF.
    2. TLSv1.1 and all previous versions have known security issues and **MUST
       NOT** be supported by any service ports.
    3. To ensure that the connection can be trusted, all service ports
       **MUST** present a certificate issued by a trusted CA, such as those
       supported by major browsers (see the `epp.tlsCertificateStore` resource).
    4. All TLS certificates **MUST NOT** have expired, and **MUST** be
       presented wth any required intermediate certificates.
    5. The RDAP server name **MUST** match at least one `subjectAltName` field
       in all presented certificates (either exact match or wildcard).
    6. Service ports **MUST** use at least one of the ciphers recommended in
       RFC 9325 (or any successor document).
  Resources:
    - epp.tlsCertificateStore
  Errors:
    - RDAP_TLS_DNS_RESOLUTION_ERROR
    - RDAP_TLS_SERVICE_PORT_UNREACHABLE
    - RDAP_TLS_NO_SERVICE_PORTS_REACHABLE
    - RDAP_TLS_REQUIRED_PROTOCOL_NOT_SUPPORTED
    - RDAP_TLS_FORBIDDEN_PROTOCOL_SUPPORTED
    - RDAP_TLS_UNTRUSTED_CERTIFICATE
    - RDAP_TLS_EXPIRED_CERTIFICATE
    - RDAP_TLS_CERTIFICATE_CHAIN_MISSING
    - RDAP_TLS_CERTIFICATE_HOSTNAME_MISMATCH
    - RDAP_TLS_BAD_CIPHER

rdap-92:
  Implemented: true
  Summary: Service port consistency check
  Maturity: GAMMA
  Description: |
    **NOTE: this test case is a placeholder for a test case that will eventually
    be added to the RDAP Conformance Tool.**

    This test confirms that all RDAP service ports return identical responses.

    Since applicants must provide an RDAP service over both IPv4 and IPv6, at
    least two service ports will be checked.

    The client will establish separate connections to each RDAP service port
    (defined as an IP address and TCP port, where at least one IPv4 address/port
    pair and IPv6 address/port pair are expected) and perform RDAP queries on
    the objects specified in the `rdap.testDomains`, `rdap.testEntities`, and
    `rdap.testNameservers` input parameters.

    The responses returned by each service port **MUST**, with the exception
    of the `last update of RDAP database` event, be consistent, once the JSON
    body has been parsed and canonicalised.
  Errors:
    - RDAP_TLS_DNS_RESOLUTION_ERROR
    - RDAP_TLS_SERVICE_PORT_UNREACHABLE
    - RDAP_TLS_NO_SERVICE_PORTS_REACHABLE
    - RDAP_SERVICE_PORT_NOT_CONSISTENT

srsgw.eppHostName:
  Description: the fully-qualified domain name of the SRS Gateway EPP server.
  Required: true
  Type: input
  Example: epp.rsp.tech
  Schema:
    type: string
    format: hostname

srsgw.eppClid01:
  Description: the username used to log in to the SRS Gateway EPP server.
  Required: true
  Type: input
  Example: clid-01
  Schema:
    type: string
    minLength: 3

srsgw.eppPwd01:
  Description: the password used to log in to the SRS Gateway EPP server.
  Required: true
  Type: input
  Example: foo2bar
  Schema:
    type: string

srsgw.serverIssuedClientCertificate01:
  Description: |
    If the EPP server uses a private CA to issue client certificates, then
    a certificate generated using the CSR provided in the `epp.client01CSR` may
    be provided using this parameter. This certificate will only be used in
    conjunction with the `srsgw.eppClid01` and `srsgw.eppPwd01` credentials.
    If the server will accept ICANN's own client certificate, this parameter
    **SHOULD** be omitted.
  Required: true
  Type: file
  Schema:
    type: string
  Example: cert.pem

srsgw.serverIssuedClientCertificate02:
  Description: |
    If the EPP server uses a private CA to issue client certificates, then
    a certificate generated using the CSR provided in the `epp.client02CSR` may
    be provided using this parameter. This certificate will only be used in
    conjunction with the `srsgw.eppClid02` and `srsgw.eppPwd02` credentials.
    If the server will accept ICANN's own client certificate, this parameter
    **SHOULD** be omitted.
  Type: file
  Required: true
  Schema:
    type: string
  Example: cert.pem

srsgw.eppClid02:
  Description: the username used for transfer tests.
  Required: true
  Type: input
  Example: clid-02
  Schema:
    type: string

srsgw.eppPwd02:
  Description: the password used for transfer tests.
  Required: true
  Type: input
  Example: foo3bar
  Schema:
    type: string

srsgw.rdapBaseURLs:
  Description: |
    The RDAP base URL(s) for the TLD(s).

    The host name component of each URL **MUST** comply with the requirements
    for valid hostnames described in [RFC
    1123](https://www.rfc-editor.org/rfc/rfc1123.html), section 2.1.
    Additionally, all IDN labels in the host name **MUST** comply with IDNA2008.

    If an RDAP Base URL includes a port, it **MUST** be 443.

  Type: input
  Required: true
  Example:
    - tld: example
      baseURL: "https://rdap.example.com/example/"
  Schema:
    type: array
    minItems: 1
    items:
      type: object
      required:
        - tld
        - baseURL
      properties:
        tld:
          description: The TLD or equivalent registry-class domain name.
          type: string
          format: hostname
        baseURL:
          description: |
            The RDAP Base URL. The URL **MUST** have trailing slash (`/`).
          type: string
          format: url

srsgw.domainCreateExtension:
  Description: |
    If a domain `<create>` command submitted through the SRS Gateway requires
    one or more extension in its `<extension>` element in order to succeed, then
    this parameter can be used to provide the XML syntax that should be used.

    This parameter should contain a valid EPP `<extension>` element containing
    all the extension elements that are required for the domain `<create>`
    command. This element will be imported into the domain `<create>` command
    frame before being sent to the server.

    The XML namespace URIs of the child elements of the `<extension>` element
    **MUST** appear in `<extURI>` elements in the `<greeting>` and the
    extensions **MUST** be registered in the
    [EPP Extension Registry](https://www.iana.org/assignments/epp-extensions/epp-extensions.xhtml).

    If no extensions are required, this input parameter **MUST** be omitted. If
    provided, it will not be validated until the test run occurs, at which point
    an `SRSGW_EPP_INVALID_EXTENSION` error will be emitted.
  Type: input
  Required: false
  Example: |
    <extension xmlns='urn:ietf:params:xml:ns:epp-1.0'>
      <allocationToken xmlns='urn:ietf:params:xml:ns:allocationToken-1.0'>
        abc123
      </allocationToken>
    </extension>
  Schema:
    type: string

srsgw.domainDeleteExtension:
  Description: |
    This input parameter is used to provide the extension elements required to
    perform a domain `<update>` command through the SRS Gateway. Other than the
    different EPP command it relates to, it is identical to the
    `srsgw.domainCreateExtension` element.
  Type: input
  Required: false
  Example: "<!-- see srsgw.domainCreateExtension -->"
  Schema:
    type: string

srsgw.domainRenewExtension:
  Description: |
    This input parameter is used to provide the extension elements required to
    perform a domain `<renew>` command through the SRS Gateway. Other than the
    different EPP command it relates to, it is identical to the
    `srsgw.domainCreateExtension` element.
  Type: input
  Required: false
  Example: "<!-- see srsgw.domainCreateExtension -->"
  Schema:
    type: string

srsgw.domainTransferRequestExtension:
  Description: |
    This input parameter is used to provide the extension elements required to
    perform a domain `<transfer op="request">` command through the SRS Gateway.
    Other than the different EPP command it relates to, it is
    identical to the `srsgw.domainCreateExtension` element.
  Type: input
  Required: false
  Example: "<!-- see srsgw.domainCreateExtension -->"
  Schema:
    type: string

srsgw.domainTransferApproveExtension:
  Description: |
    This input parameter is used to provide the extension elements required to
    perform a domain `<transfer op="approve">` command through the SRS Gateway.
    Other than the different EPP command it relates to, it is
    identical to the `srsgw.domainCreateExtension` element.
  Type: input
  Required: false
  Example: "<!-- see srsgw.domainCreateExtension -->"
  Schema:
    type: string

srsgw.registryDataModel:
  Description: |
    This input parameter identifies the data model for the SRS Gateway, which
    may be different to that of the Primary EPP server (for example, because the
    Gateway requires registrant information in order to verify their identity).

    It has identical semantics to the `general.registryDataModel` input
    parameter.
  Type: input
  Required: true
  Example: minimum
  Schema:
    type: string
    enum:
      - minimum
      - maximum
      - per-registrar

srsgw.eppClid01DataModel:
  Description: |
    The data model for the `srsgw.eppClid01` client. This may be omitted and
    will in any case be ignored unless the value of the
    `srsgw.registryDataModel` input parameter is `per-registrar`.

    If set, then the value of this input parameter **MUST** be different from
    the value of the `srsgw.eppClid02DataModel` input parameter.
  Type: input
  Required: false
  Example: minimum
  Schema:
    type: string
    enum:
      - minimum
      - maximum

srsgw.eppClid02DataModel:
  Description: |
    The data model for the `srsgw.eppClid02` client. This may be omitted and
    will in any case be ignored unless the value of the
    `srsgw.registryDataModel` input parameter is `per-registrar`.

    If set, then the value of this input parameter **MUST** be different from
    the value of the `srsgw.eppClid01DataModel` input parameter.
  Type: input
  Required: false
  Example: minimum
  Schema:
    type: string
    enum:
      - minimum
      - maximum

srsgw.eppRequiredContactElements:
  Description: |
    This input parameter has the same semantics as the
    `epp.requiredContactTypes` input parameter but relates to the SRS Gateway
    EPP Server.
  Type: input
  Required: true
  Example: ["admin"]
  Schema:
    type: array
    items:
      type: string
      enum:
        - admin
        - tech
        - billing

srsgw.eppRequiredContactTypes:
  Description: |
    This input parameter has the same semantics as the
    `epp.requiredContactTypes` input parameter but relates to the SRS Gateway
    EPP Server.
  Type: input
  Required: true
  Example: ["admin"]
  Schema:
    type: array
    items:
      type: string
      enum:
        - admin
        - tech
        - billing

srsgw.eppSupportedContactElements:
  Description: |
    This input parameter has the same semantics as the
    `epp.supportedContactElements` input parameter but relates to the SRS Gateway
    EPP Server.
  Type: input
  Required: false
  Example:
    - org
    - street
    - sp
    - pc
    - voice
    - voice:ext
  Schema:
    type: array
    items:
      type: string
      enum:
        - org
        - street
        - sp
        - pc
        - voice
        - voice:ext
        - fax
        - fax:ext

epp.hostName:
  Description: |
    The fully-qualified domain name of the EPP server.

    The server name **MUST** comply with the requirements for valid
    hostnames described in RFC 1123, section 2.1. Additionally, all IDN labels
    in the server name **MUST** comply with IDNA2008.
  Type: input
  Example: epp.rsp.tech
  Schema:
    type: string
    format: hostname
epp.greeting:
  Description: |
    an XML instance which contains a copy of the server's `<greeting>`.
  Type: file
  Example: greeting.xml
  Schema:
    type: string
    
epp.clid01:
  Description: the username used to log in to the EPP server
  Type: input
  Example: clid-01
  Schema:
    type: string
    minLength: 3
    maxLength: 16

epp.pwd01:
  Description: the password used to log in to the EPP server
  Type: input
  Example: foo2bar
  Schema:
    type: string

epp.serverIssuedClientCertificate01:
  Description: |
    If the EPP server uses a private CA to issue client certificates, then
    a certificate generated using the CSR provided in the `epp.clientCSR`
    resource may be provided using this parameter. This certificate will only be
    used in conjunction with the `epp.clid01` and `epp.pwd01` credentials. If
    the server will accept ICANN's own client certificate, this parameter
    **SHOULD** be empty.
  Type: file
  Example: rst_test_client_cert.pem
  Schema:
    type: string

epp.serverIssuedClientCertificate02:
  Description: |
    If the EPP server uses a private CA to issue client certificates, then
    a certificate generated using the CSR provided in the `epp.clientCSR`
    resource may be provided using this parameter. This certificate will only be
    used in conjunction with the `epp.clid02` and `epp.pwd02` credentials. If
    the server will accept ICANN's own client certificate, this parameter
    **SHOULD** be empty.
  Type: file
  Example: rst_test_client_cert.pem
  Schema:
    type: string

epp.clid02:
  Description: the username used for transfer tests
  Type: input
  Example: clid-02
  Schema:
    type: string
    minLength: 3
    maxLength: 16

epp.pwd02:
  Description: the password used for transfer tests
  Type: input
  Example: foo3bar
  Schema:
    type: string

epp.hostModel:
  Description: |
    The host model supported by the EPP server. The possible values for this
    parameter are:
      * `objects`
      * `attributes`
  Type: input
  Example: objects
  Schema:
    enum:
      - objects
      - attributes

epp.secDNSInterfaces:
  Description: |
    Which of the interfaces defined in Section 4 of RFC 5910 the server
    supports (either `dsData` or `keyData`).
  Type: input
  Example: dsData
  Schema:
    enum:
      - dsData
      - keyData

epp.registeredNames:
  Description: |
    An array of domain names that exist in the EPP server and which are
    therefore unavailable for registration. The domains **MUST NOT** be under
    the sponsorship of the `epp.clid01` or `epp.clid02` registrars. The array
    **MUST** contain one member for each TLD in the TLD set.
  Type: input
  Example: ["example.example1", "example.example2"]
  Schema:
    type: array
    items:
      type: string
      format: hostname

epp.registeredNameservers:
  Description: |
    An array of host objects that exist in the EPP server and which are
    therefore unavailable for registration.

    If the value of `epp.hostModel` is `objects`, this array **MUST** contain
    one member for each TLD in the TLD set. However, if it is `attributes`,
    the array **MUST** be empty.
  Type: input
  Example: ["ns1.example.com", "ns2.example.org"]
  Schema:
    type: array
    items:
      type: string
      format: hostname

epp.registeredContacts:
  Description: |
    An array of contact IDs that exist in the EPP server and which are
    therefore unavailable for registration.

    If the value of `general.minimalPublicDataSet` is `false`, this array
    **MUST** contain one member for each TLD in the TLD set. However, if it is
    `false`, the array **MUST** be empty.
  Type: input
  Example: ["abc123", "def321"]
  Schema:
    type: array
    items:
      type: string

epp.restoreReportRequired:
  Description: |
    Whether the server requires submission of a restore report when a client
    attempts to restore a domain.
  Type: input
  Example: false
  Schema:
    type: boolean

epp.requiredContactTypes:
  Description: |
    An array containing the values of the `type` attribute of `<contact>`
    element(s) that are required to successfully create a domain name. If the
    value of `general.minimalPublicDataSet` is `false`, this array `MUST` be
    empty.
  Type: input
  Example: ["admin"]
  Schema:
    type: array
    items:
      enum:
        - admin
        - tech
        - billing
